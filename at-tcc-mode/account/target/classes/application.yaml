spring:
  application:
    name: account
  config:
    import:
      - nacos:/account.yaml
  #      - nacos:/service_a_config.yaml?group=SERVICE_A_CONFIGS&refreshEnabled=true
  datasource:
    dynamic:
      primary: master
      datasource:
        master:
          driver-class-name: com.mysql.cj.jdbc.Driver
          hikari:
            connection-test-query: SELECT 1
            max-lifetime: 30000
            max-pool-size: 20
            min-idle: 5
          password: ${DB_PASSWORD:zd199578}
          url: jdbc:mysql://${MYSQL_HOST:192.168.5.66}:${MYSQL_PORT:33106}/test?serverTimezone=Asia/Shanghai&autoReconnect=true&useUnicode=true&characterEncoding=utf8&allowMultiQueries=true&useSSL=false
          username: ${DB_USERNAME:root}
  cloud:
    nacos:
      discovery:
        server-addr: ${NACOS_DISCOVERY_ADDR:192.168.5.66:8848}
        heart-beat-interval: 1000
        namespace: ${NACOS_DISCOVERY_NAME_SPACE:b435d065-6a06-433d-8d1f-03c81a70221f}
        group: ${NACOS_DISCOVERY_GROUP:WX_TEST}
        ephemeral: ${EPHEMERAL:true}
        service: ${spring.application.name}
        #        metadata:
        #          preserved.heart.beat.interval: 1
        #          preserved.heart.beat.timeout: 3
        #          preserved.ip.delete.timeout: 3
        heart-beat-timeout: 3000
        ip-delete-timeout: 3000
      config:
        server-addr: ${NACOS_CONFIG_ADDR:192.168.5.66:8848}
        file-extension: yaml
        group: ${NACOS_CONFIG_GROUP:WX_TEST}
        enabled: true #false:会根据spring.profiles.active读取本地文件
        namespace: ${NACOS_CONFIG_NAME_SPACE:b435d065-6a06-433d-8d1f-03c81a70221f}
        refresh-enabled: true

logging:
  config: classpath:${LOGBACK_FILE:logback-local.xml}
  level:
    com.alibaba.nacos: debug
feign:
  okhttp:
    enabled: true
  client:
    config:
      default:
        connectTimeout: 10000
        readTimeout: 60000
      dc:
        connectTimeout: 10000
        readTimeout: 10000
# -----------seata--------------
seata:
#  data-source-proxy-mode: AT
  # 配置 当前应用使用的事务组
  tx-service-group: default_tx_group
  enabled: true
  config:
    type: nacos
    nacos:
      server-addr: 192.168.5.66:8848
      group: SEATA_GROUP
      namespace: 4f3764ed-4f7d-4891-91a2-dcedc704b0e4
      data-id: seataServer.properties
  registry:
    type: nacos
    nacos:
      server-addr: 192.168.5.66:8848
      group: SEATA_GROUP
      namespace: 4f3764ed-4f7d-4891-91a2-dcedc704b0e4
      cluster: default
      application: seata-server
# 这样设计的好处是 能够在集群故障的时候快速切换
#  service:
#    # 将一个事务组映射到一个 group 集群的名字上来
#    vgroup-mapping:
#      default_tx_group: default
#    # 对 default的groupList 定义集群地址
#    # 文档原文：这里多了一层获取事务分组到映射集群的配置。这样设计后，事务分组可以作为资源的逻辑隔离单位，出现某集群故障时可以快速failover，只切换对应分组，可以把故障缩减到服务级别，但前提也是你有足够server集群。
#    grouplist:
#      default: 192.168.5.66:8091
#    disable-global-transaction: false